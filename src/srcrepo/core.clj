(ns srcrepo.core
  (:import [java.security MessageDigest]
           [java.io FileInputStream FileOutputStream File]
           [redis.clients.jedis Jedis]
           [srcrepo Codec]))

(defmacro dbg [body]
  `(let [x# ~body]
     (println "dbg:" '~body "=" x#)
     x#))

(def sha-256 (MessageDigest/getInstance "SHA-256"))


(defn file-name->ba [file-name]
  (let [in-stream (FileInputStream. file-name)
        ba (byte-array (.available in-stream))
        _ (.read in-stream ba)]
    ba))

(defn ba->ba-str [ba]
  (apply str (map (partial format "%02x") ba)))

(defn file->sha-256 [file]
  (.digest sha-256 (file-name->ba file)))

(defn add-file-to-repo [src-file bin-files]
   (let [k (file->sha-256 src-file)]
     {k (map (fn [f] [(.getName f) (file-name->ba f)]) bin-files)}))

(defn files-of [dir ext]
  (let [ext (format ".%s" ext)]
    (filter (fn [path] (.endsWith (.getName path) ext)) (file-seq (clojure.java.io/file dir)))))

(defn relative-path-of [root-dir file]
  (.substring (.getAbsolutePath file) (-> root-dir .getAbsolutePath count inc)))

(defn pair-src-file [src-dir bin-dir bin-files]
  (let [relative-bin-files (map (partial relative-path-of bin-dir) bin-files)]
    (fn [src-file] 
      (let [relative-src-file (relative-path-of src-dir src-file)
            relative-src-file-no-ext (.substring relative-src-file 0 (- (count relative-src-file) 5))]
        [(File. src-dir relative-src-file) 
         (map (fn [rf] (File. bin-dir rf)) (filter #(.startsWith % relative-src-file-no-ext) relative-bin-files))]
  ))))

(defn pair-src-bin-files [[src-dir src-ext] [bin-dir bin-ext]]
  (if (and (.isDirectory src-dir) (.isDirectory bin-dir))
   (let [src-files (files-of src-dir src-ext)
         bin-files (files-of bin-dir bin-ext)
         pair-src-file-fn (pair-src-file src-dir bin-dir bin-files)]
     (map pair-src-file-fn src-files))
  (throw (IllegalArgumentException. "Must be directory"))
  ))


(defn add-dir-to-repo [src bin]
  (apply merge (map (fn [[src-file bin-files]] (add-file-to-repo src-file bin-files)) (pair-src-bin-files src bin)))
  )

(def jedis (Jedis. "localhost" 6379)) 

(defn add-dir-to-redis! [src bin]
  (doseq [[k v] (add-dir-to-repo src bin)]
    (.set jedis k (Codec/encodeBA v))))

(defn remove-name [path]
  (.getParent (File. path)))

(defn init-bin! [[src-dir src-ext] bin-root-dir]
  (let [src-files 
        (map (fn [f] [(remove-name (relative-path-of src-dir f)) (.get jedis (file->sha-256 f))]) (files-of src-dir src-ext))
        src-files (filter (fn [[_ ba]] ba) src-files)]
    (dbg (count (first src-files)))
    (doseq [[rel-src-dir bin-files] src-files]
      ;(dbg rel-src-dir)
      ;(dbg (Codec/decodeBA bin-files))
      (let [bin-dir (File. bin-root-dir rel-src-dir)]
        (doseq [bin-file (Codec/decodeBA bin-files)]
          (let [[bin-name ba] bin-file
                f (File. bin-dir bin-name)
                out (FileOutputStream. f)]
            (try 
              (.write out ba)
              (.flush out)
              (finally
                (.close out)))
            )
          )
      ))
    #_(map #(.get jedis %) sha-256s)
    )
  )



(def ultra-project 
  [[[(File. "/Users/anderseliasson/src/mz8/mz-main/mediationzone/packages/ultra/src/external/java") "java"]
    [(File. "/Users/anderseliasson/src/mz8/mz-main/mediationzone/packages/ultra/build/classes/java/external") "class"]]
  [[(File. "/Users/anderseliasson/src/mz8/mz-main/mediationzone/packages/ultra/src/devkit/java") "java"]
   [(File. "/Users/anderseliasson/src/mz8/mz-main/mediationzone/packages/ultra/build/classes/java/devkit") "class"]]
   [[(File. "/Users/anderseliasson/src/mz8/mz-main/mediationzone/packages/ultra/src/server/java") "java"]
    [(File. "/Users/anderseliasson/src/mz8/mz-main/mediationzone/packages/ultra/build/classes/java/server") "class"]]
   [[(File. "/Users/anderseliasson/src/mz8/mz-main/mediationzone/packages/ultra/src/testsupport/java") "java"]
    [(File. "/Users/anderseliasson/src/mz8/mz-main/mediationzone/packages/ultra/build/classes/java/testsupport") "class"]]])
  

  (defn add! [] 
    (doseq [[src bin] ultra-project]
      (add-dir-to-redis! src bin)))

(def a-ba  
  (byte-array
    [1 24 69 74 83 101 113 70 105 101 108 100 71 101 110 95 108 105 115 116 46 99 108 97 115 115 -48 11 
     0 0 -54 -2 -70 -66 0 0 0 52 0 105 10 0 21 0 49 9 0 20 0 50 7 0 51 10 0 20 0 52 10 0 53 0 54 10 0 3 
     0 55 7 0 56 10 0 57 0 58 10 0 7 0 59 7 0 60 10 0 10 0 61 8 0 62 10 0 10 0 63 10 0 20 0 64 11 0 65 
     0 66 10 0 10 0 67 10 0 68 0 69 10 0 70 0 71 10 0 72 0 73 7 0 74 7 0 75 7 0 76 1 0 13 95 101 120 116 80 114 101 115 101 110 116 70 68 1 0 35 76 99 111 109 47 100 105 103 105 116 97 108 114 111 117 116 101 47 106 115 111 117 114 99 101 47 86 97 114 105 97 98 108 101 59 1 0 6 60 105 110 105 116 62 1 0 59 40 76 99 111 109 47 100 105 103 105 116 97 108 114 111 117 116 101 47 119 102 99 47 117 108 116 114 97 47 115 101 113 47 100 97 116 97 47 69 83 101 113 70 105 101 108 100 68 101 115 99 95 108 105 115 116 59 41 86 1 0 4 67 111 100 101 1 0 15 76 105 110 101 78 117 109 98 101 114 84 97 98 108 101 1 0 18 76 111 99 97 108 86 97 114 105 97 98 108 101 84 97 98 108 101 1 0 4 116 104 105 115 1 0 57 76 99 111 109 47 100 105 103 105 116 97 108 114 111 117 116 101 47 119 102 99 47 117 108 116 114 97 47 115 101 113 47 100 106 103 101 110 47 69 74 83 101 113 70 105 101 108 100 71 101 110 95 108 105 115 116 59 1 0 4 100 101 115 99 1 0 56 76 99 111 109 47 100 105 103 105 116 97 108 114 111 117 116 101 47 119 102 99 47 117 108 116 114 97 47 115 101 113 47 100 97 116 97 47 69 83 101 113 70 105 101 108 100 68 101 115 99 95 108 105 115 116 59 1 0 10 69 120 99 101 112 116 105 111 110 115 1 0 13 99 114 101 97 116 101 77 97 112 112 105 110 103 1 0 102 40 76 99 111 109 47 100 105 103 105 116 97 108 114 111 117 116 101 47 100 101 118 107 105 116 47 100 114 117 100 114 47 68 82 85 68 82 70 105 101 108 100 59 41 76 99 111 109 47 100 105 103 105 116 97 108 114 111 117 116 101 47 119 102 99 47 117 108 116 114 97 47 115 101 114 118 101 114 47 106 97 118 97 103 101 110 47 69 74 70 105 101 108 100 77 97 112 112 105 110 103 59 1 0 6 105 102 105 101 108 100 1 0 42 76 99 111 109 47 100 105 103 105 116 97 108 114 111 117 116 101 47 100 101 118 107 105 116 47 100 114 117 100 114 47 68 82 85 68 82 70 105 101 108 100 59 1 0 101 40 76 99 111 109 47 100 105 103 105 116 97 108 114 111 117 116 101 47 100 101 118 107 105 116 47 100 114 117 100 114 47 68 82 85 68 82 84 121 112 101 59 41 76 99 111 109 47 100 105 103 105 116 97 108 114 111 117 116 101 47 119 102 99 47 117 108 116 114 97 47 115 101 114 118 101 114 47 106 97 118 97 103 101 110 47 69 74 70 105 101 108 100 77 97 112 112 105 110 103 59 1 0 10 116 97 114 103 101 116 84 121 112 101 1 0 41 76 99 111 109 47 100 105 103 105 116 97 108 114 111 117 116 101 47 100 101 118 107 105 116 47 100 114 117 100 114 47 68 82 85 68 82 84 121 112 101 59 1 0 15 103 101 116 69 120 116 80 114 101 115 101 110 116 70 68 1 0 37 40 41 76 99 111 109 47 100 105 103 105 116 97 108 114 111 117 116 101 47 106 115 111 117 114 99 101 47 86 97 114 105 97 98 108 101 59 1 0 2 102 100 1 0 43 76 99 111 109 47 100 105 103 105 116 97 108 114 111 117 116 101 47 106 115 111 117 114 99 101 47 70 105 101 108 100 68 101 99 108 97 114 97 116 105 111 110 59 1 0 13 83 116 97 99 107 77 97 112 84 97 98 108 101 1 0 10 83 111 117 114 99 101 70 105 108 101 1 0 23 69 74 83 101 113 70 105 101 108 100 71 101 110 95 108 105 115 116 46 106 97 118 97 12 0 25 0 77 12 0 23 0 24 1 0 59 99 111 109 47 100 105 103 105 116 97 108 114 111 117 116 101 47 119 102 99 47 117 108 116 114 97 47 115 101 113 47 100 106 103 101 110 47 69 74 83 101 113 70 105 101 108 100 77 97 112 112 105 110 103 95 108 105 115 116 12 0 78 0 79 7 0 80 12 0 81 0 82 12 0 25 0 83 1 0 45 99 111 109 47 100 105 103 105 116 97 108 114 111 117 116 101 47 100 101 118 107 105 116 47 101 120 99 101 112 116 105 111 110 47 68 82 69 120 99 101 112 116 105 111 110 7 0 84 12 0 85 0 86 12 0 25 0 87 1 0 23 106 97 118 97 47 108 97 110 103 47 83 116 114 105 110 103 66 117 105 108 100 101 114 12 0 25 0 88 1 0 11 101 120 116 80 114 101 115 101 110 116 95 12 0 89 0 90 12 0 91 0 92 7 0 93 12 0 94 0 95 12 0 96 0 95 7 0 97 12 0 98 0 99 7 0 100 12 0 101 0 102 7 0 103 12 0 104 0 43 1 0 55 99 111 109 47 100 105 103 105 116 97 108 114 111 117 116 101 47 119 102 99 47 117 108 116 114 97 47 115 101 113 47 100 106 103 101 110 47 69 74 83 101 113 70 105 101 108 100 71 101 110 95 108 105 115 116 1 0 57 99 111 109 47 100 105 103 105 116 97 108 114 111 117 116 101 47 119 102 99 47 117 108 116 114 97 47 115 101 114 118 101 114 47 106 97 118 97 103 101 110 47 69 74 70 105 101 108 100 71 101 110 95 108 105 115 116 1 0 50 99 111 109 47 100 105 103 105 116 97 108 114 111 117 116 101 47 119 102 99 47 117 108 116 114 97 47 115 101 113 47 100 106 103 101 110 47 69 74 83 101 113 70 105 101 108 100 71 101 110 1 0 54 40 76 99 111 109 47 100 105 103 105 116 97 108 114 111 117 116 101 47 119 102 99 47 117 108 116 114 97 47 115 101 114 118 101 114 47 100 97 116 97 47 69 70 105 101 108 100 68 101 115 99 59 41 86 1 0 13 103 101 116 69 70 111 114 109 97 116 71 101 110 1 0 57 40 41 76 99 111 109 47 100 105 103 105 116 97 108 114 111 117 116 101 47 119 102 99 47 117 108 116 114 97 47 115 101 114 118 101 114 47 106 97 118 97 103 101 110 47 69 74 70 111 114 109 97 116 71 101 110 59 1 0 53 99 111 109 47 100 105 103 105 116 97 108 114 111 117 116 101 47 119 102 99 47 117 108 116 114 97 47 115 101 114 118 101 114 47 106 97 118 97 103 101 110 47 69 74 70 111 114 109 97 116 71 101 110 1 0 11 103 101 116 71 101 110 67 108 97 115 115 1 0 58 40 41 76 99 111 109 47 100 105 103 105 116 97 108 114 111 117 116 101 47 119 102 99 47 117 108 116 114 97 47 115 101 114 118 101 114 47 106 97 118 97 103 101 110 47 74 97 118 97 71 101 110 67 108 97 115 115 59 1 0 -98 40 76 99 111 109 47 100 105 103 105 116 97 108 114 111 117 116 101 47 119 102 99 47 117 108 116 114 97 47 115 101 113 47 100 106 103 101 110 47 69 74 83 101 113 70 105 101 108 100 71 101 110 95 108 105 115 116 59 76 99 111 109 47 100 105 103 105 116 97 108 114 111 117 116 101 47 100 101 118 107 105 116 47 100 114 117 100 114 47 68 82 85 68 82 70 105 101 108 100 59 76 99 111 109 47 100 105 103 105 116 97 108 114 111 117 116 101 47 119 102 99 47 117 108 116 114 97 47 115 101 114 118 101 114 47 106 97 118 97 103 101 110 47 74 97 118 97 71 101 110 67 108 97 115 115 59 41 86 1 0 41 99 111 109 47 100 105 103 105 116 97 108 114 111 117 116 101 47 119 102 99 47 117 108 116 114 97 47 115 101 114 118 101 114 47 85 108 116 114 97 84 67 1 0 54 84 67 95 85 76 84 82 65 95 83 69 81 95 67 65 78 78 79 84 95 65 68 68 95 73 78 84 69 82 78 65 76 95 77 65 80 80 73 78 71 95 84 79 95 67 79 78 83 95 70 73 69 76 68 1 0 43 40 41 76 99 111 109 47 100 105 103 105 116 97 108 114 111 117 116 101 47 100 101 118 107 105 116 47 109 105 115 99 47 68 82 84 101 120 116 67 111 100 101 59 1 0 44 40 76 99 111 109 47 100 105 103 105 116 97 108 114 111 117 116 101 47 100 101 118 107 105 116 47 109 105 115 99 47 68 82 84 101 120 116 67 111 100 101 59 41 86 1 0 3 40 41 86 1 0 6 97 112 112 101 110 100 1 0 45 40 76 106 97 118 97 47 108 97 110 103 47 83 116 114 105 110 103 59 41 76 106 97 118 97 47 108 97 110 103 47 83 116 114 105 110 103 66 117 105 108 100 101 114 59 1 0 13 103 101 116 69 70 105 101 108 100 68 101 115 99 1 0 53 40 41 76 99 111 109 47 100 105 103 105 116 97 108 114 111 117 116 101 47 119 102 99 47 117 108 116 114 97 47 115 101 114 118 101 114 47 100 97 116 97 47 69 70 105 101 108 100 68 101 115 99 59 1 0 49 99 111 109 47 100 105 103 105 116 97 108 114 111 117 116 101 47 119 102 99 47 117 108 116 114 97 47 115 101 114 118 101 114 47 100 97 116 97 47 69 70 105 101 108 100 68 101 115 99 1 0 12 103 101 116 70 105 101 108 100 78 97 109 101 1 0 20 40 41 76 106 97 118 97 47 108 97 110 103 47 83 116 114 105 110 103 59 1 0 8 116 111 83 116 114 105 110 103 1 0 39 99 111 109 47 100 105 103 105 116 97 108 114 111 117 116 101 47 100 101 118 107 105 116 47 100 114 117 100 114 47 68 82 85 68 82 84 121 112 101 1 0 10 80 84 95 66 79 79 76 69 65 78 1 0 43 40 41 76 99 111 109 47 100 105 103 105 116 97 108 114 111 117 116 101 47 100 101 118 107 105 116 47 100 114 117 100 114 47 68 82 85 68 82 84 121 112 101 59 1 0 54 99 111 109 47 100 105 103 105 116 97 108 114 111 117 116 101 47 119 102 99 47 117 108 116 114 97 47 115 101 114 118 101 114 47 106 97 118 97 103 101 110 47 74 97 118 97 71 101 110 67 108 97 115 115 1 0 17 99 114 101 97 116 101 85 110 105 113 117 101 70 105 101 108 100 1 0 104 40 76 106 97 118 97 47 108 97 110 103 47 83 116 114 105 110 103 59 76 99 111 109 47 100 105 103 105 116 97 108 114 111 117 116 101 47 100 101 118 107 105 116 47 100 114 117 100 114 47 68 82 85 68 82 84 121 112 101 59 41 76 99 111 109 47 100 105 103 105 116 97 108 114 111 117 116 101 47 106 115 111 117 114 99 101 47 70 105 101 108 100 68 101 99 108 97 114 97 116 105 111 110 59 1 0 41 99 111 109 47 100 105 103 105 116 97 108 114 111 117 116 101 47 106 115 111 117 114 99 101 47 70 105 101 108 100 68 101 99 108 97 114 97 116 105 111 110 1 0 11 103 101 116 86 97 114 105 97 98 108 101 0 33 0 20 0 21 0 1 0 22 0 1 0 2 0 23 0 24 0 0 0 4 0 1 0 25 0 26 0 2 0 27 0 0 0 71 0 2 0 2 0 0 0 11 42 43 -73 0 1 42 1 -75 0 2 -79 0 0 0 2 0 28 0 0 0 14 0 3 0 0 0 25 0 5 0 78 0 10 0 26 0 29 0 0 0 22 0 2 0 0 0 11 0 30 0 31 0 0 0 0 0 11 0 32 0 33 0 1 0 34 0 0 0 4 0 1 0 7 0 1 0 35 0 36 0 2 0 27 0 0 0 77 0 5 0 2 0 0 0 17 -69 0 3 89 42 43 42 -74 0 4 -74 0 5 -73 0 6 -80 0 0 0 2 0 28 0 0 0 14 0 3 0 0 0 32 0 7 0 33 0 16 0 32 0 29 0 0 0 22 0 2 0 0 0 17 0 30 0 31 0 0 0 0 0 17 0 37 0 38 0 1 0 34 0 0 0 4 0 1 0 7 0 1 0 35 0 39 0 2 0 27 0 0 0 67 0 3 0 2 0 0 0 11 -69 0 7 89 -72 0 8 -73 0 9 -65 0 0 0 2 0 28 0 0 0 10 0 2 0 0 0 40 0 4 0 41 0 29 0 0 0 22 0 2 0 0 0 11 0 30 0 31 0 0 0 0 0 11 0 40 0 41 0 1 0 34 0 0 0 4 0 1 0 7 0 1 0 42 0 43 0 2 0 27 0 0 0 -110 0 3 0 2 0 0 0 61 42 -76 0 2 -57 0 52 42 -74 0 4 -74 0 5 -69 0 10 89 -73 0 11 18 12 -74 0 13 42 -74 0 14 -71 0 15 1 0 -74 0 13 -74 0 16 -72 0 17 -74 0 18 76 42 43 -74 0 19 -75 0 2 42 -76 0 2 -80 0 0 0 3 0 28 0 0 0 30 0 7 0 0 0 68 0 7 0 69 0 27 0 71 0 41 0 72 0 44 0 70 0 48 0 73 0 56 0 76 0 29 0 0 0 22 0 2 0 48 0 8 0 44 0 45 0 1 0 0 0 61 0 30 0 31 0 0 0 46 0 0 0 3 0 1 56 0 34 0 0 0 4 0 1 0 7 0 1 0 47 0 0 0 2 0 48]))

  
  